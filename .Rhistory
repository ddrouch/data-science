plot(phd_data$Time, phd_data$Pubs,main="Scatterplot of Time and Pubs", xlab="Time", ylab="Publications", pch=19)
#We can use R to compute the Pearson Correlation and obtain other values for the hypothesis test
cor.test(phd_data$Time, phd_data$Pubs, method=c("pearson"))
#Now, let's look the example from asyc for the spearman correlation '
english_data <- read.table(file.choose(), header=TRUE, sep="\t")
#Point-Biserial Correlation
byod_data <- read.table(file.choose(), header=TRUE, sep="\t")
#Phi Correlation
grad_data <- read.table(file.choose(), header=TRUE, sep="\t")
View(english_data)
cor.test(english_data$Words, english_data$Grade, method=c("spearman"))
View(byod_data)
View(byod_data)
cor.test(byod_data$Grade, byod_data$Byod)
table(grad_data)
cor.test(grad_data$Doctorate, grad_data$Business)
laptop = read.table("/Users/derekrouch/Google Drive/00 Vanderbilt/LLO 8180 - Applied Statistics/Week 12/laptop.txt", header=T, sep="\t")
laptop = read.table("/Users/derekrouch/Google Drive/00 Vanderbilt/LLO 8180 - Applied Statistics/Week 12/laptop.txt", header=T, sep="\t")
View(laptop)
View(laptop)
plot(laptop$Laptop, laptop$Grade,main="Laptop Use and Academic Success", xlab="Laptop", ylab="Grade", pch=19)
plot(laptop$Laptop, laptop$Grade,main="Laptop Use and Academic Success", xlab="Laptop", ylab="Grade", pch=19, col = #5B9BD5)
plot(laptop$Laptop, laptop$Grade,main="Laptop Use and Academic Success", xlab="Laptop", ylab="Grade", pch=19, col = rgb(91,155,213))
plot(laptop$Laptop, laptop$Grade,main="Laptop Use and Academic Success", xlab="Laptop", ylab="Grade", pch=19, col = rgb(91,155,213))
plot(laptop$Laptop, laptop$Grade,main="Laptop Use and Academic Success", xlab="Laptop", ylab="Grade", pch=19, col=rgb(91,155,213))
cor.test(laptop$Laptop, laptop$Grade, method=c("pearson"))
cor.test(laptop$Laptop, laptop$Grade)
activity = read.table("/Users/derekrouch/Google Drive/00 Vanderbilt/LLO 8180 - Applied Statistics/Week 12/activity.txt", header=T, sep="\t")
View(activity)
plot(activity$Age, activity$Activity,main="Age and Activity", xlab="Age", ylab="Activity", pch=19)
regression = lm(Activity ~ Age)
help(lm)
regression = lm(activity, Activity ~ Age)
regression = lm(activity$Activity ~ activity$Age)
summary(regression)
View(activity)
activity.reg = lm(Activity ~ Age, data=activity)
summary(activity.reg)
activity.reg
abline(activity.reg)
abline(activity)
abline(activity)
plot(activity$Age, activity$Activity,main="Age and Activity", xlab="Age", ylab="Activity", pch=19)
abline(activity)
activity.reg = lm(Activity ~ Age, data=activity)
abline(activity.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlab="Age", ylab="Activity", pch=19)
abline(activity.reg)
abline(activity)
plot(activity$Age, activity$Activity,main="Age and Activity", xlab="Age", ylab="Activity", pch=19)
abline(activity)
abline(activity.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlab="Age", ylab="Activity", pch=19)
activity.reg = lm(Activity ~ Age, data=activity)
abline(activity.reg)
summary(activity.reg)
activity.reg
#First, we will import the data
phd <- read.table(file.choose(), header=TRUE, sep="\t")
View(phd)
#Now we will make a scatterplot to examine the data visually
plot(phd$Time, phd$Pubs, main="Scatterplot of Time and Pubs", xlab="Time", ylab="Publications", pch=19)
#Let's run an SLR with Pubs as DV and Time as IV; we will save it to an object called phd.reg
phd.reg <- lm(Pubs ~ Time, data=phd)
#Parameter estimates
phd.reg
#More information for hypothesis tests
summary(phd.reg)
#confidence intervals for parameter estimates
confint(phd.reg)
#Plotting regression line on scatterplot
abline(phd.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=range(10,55), ylim=range(10,55), xlab="Age", ylab="Activity", pch=19)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=range(0,15), ylim=range(0,5), xlab="Age", ylab="Activity", pch=19)
abline(activity)
abline(activity.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=range(0,16), ylim=range(0,6), xlab="Age", ylab="Activity", pch=19)
activity.reg = lm(Activity ~ Age, data=activity)
abline(activity.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=range(1,16), ylim=range(1,6), xlab="Age", ylab="Activity", pch=19)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=c(1,16), ylim=c(1,6), xlab="Age", ylab="Activity", pch=19)
activity.reg = lm(Activity ~ Age, data=activity)
abline(activity.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=c(1,16), ylim=c(1,6), xlab="Age", ylab="Activity", pch=19)
activity.reg = lm(Activity ~ Age, data=activity)
abline(activity.reg)
activity.reg
summary(activity.reg)
confint(activity.reg)
View(laptop)
> cor.test(activity.reg)
> cor.test(activity$Age, activity$Activity)
cor.test(activity$Age, activity$Activity)
cor.test(activity.reg)
plot(activity$Age, activity$Activity,main="Age and Activity", xlim=c(1,16), ylim=c(1,6), xlab="Age", ylab="Activity", pch=19)
abline(activity)
-0.6593879^2
(-0.6593879^2)^2
(-0.6593879^2)
(-0.6593879)^2
#Let's run an SLR with Pubs as DV and Time as IV; we will save it to an object called phd.reg
phd.reg <- lm(Pubs ~ Time, data=phd)
#Parameter estimates
phd.reg
#More information for hypothesis tests
summary(phd.reg)
#confidence intervals for parameter estimates
confint(phd.reg)
install.packages(c("plot3D", "ppcor", "QuantPsyc"))
phd <- read.table(file.choose(), header=TRUE, sep="\t")
View(phd)
require(plot3D)
attach(phd)
require(plot3D)
attach(phd)
fit <- lm(PUBS ~ TIME+SALARY)
TIME.pred <- seq(0, 20, length.out = 30)
SALARY.pred <- seq(40000, 80000, length.out = 30)
xy <- expand.grid(TIME = TIME.pred,
SALARY = SALARY.pred)
PUBS.pred <- matrix (nrow = 30, ncol = 30,
data = predict(fit, newdata = data.frame(xy), interval = "prediction"))
#Recall in async we mean centered salary, let's do that first
#(You may want to review the week 1 R code on how to add a variable to an existing dataset)
#dataset$NEWVARNAME = DATASET$VARWEWANTOCENTER - mean(DATASET$VARWEWANTTOCENTER)
phd$SALARY_c <- phd$SALARY - mean(phd$SALARY)
#Recall in async we mean centered salary, let's do that first
#(You may want to review the week 1 R code on how to add a variable to an existing dataset)
#dataset$NEWVARNAME = DATASET$VARWEWANTOCENTER - mean(DATASET$VARWEWANTTOCENTER)
phd$SALARY_c <- phd$SALARY - mean(phd$SALARY)
phd$SALARY_c <- phd$SALARY - mean(phd$SALARY)
phd$CITS_c <- phd$CITS - mean(phd$CITS)
phd.reg <- lm(PUBS ~ TIME + SALARY_c + CITS_c, data=phd)
summary(phd.reg)
phd.reg <- lm(PUBS ~ TIME + SALARY_c + CITS, data=phd)
summary(phd.reg)
install.packages("QuantPsyc")
library(QuantPsyc)
lm.beta(phd.reg)
install.packages("ppcor")
library(ppcor)
library(ppcor)
library(ppcor)
spcor(phd[,c("PUBS","SALARY_c","TIME","CITS")])
bloodpressure = read.table("/Users/derekrouch/Google Drive/00 Vanderbilt/LLO 8180 - Applied Statistics/Week 13/Bloodpressure.txt", header=T, sep="\t")
View(bloodpressure)
bloodpressure$Age_c <- bloodpressure$Age - mean(bloodpressure$Age)
bloodpressure$Size_c <- bloodpressure$Size - mean(bloodpressure$Size)
bloodpressure.reg = lm(SBP ~ Size_c + Age_c, data=bloodpressure)
summary(bloodpressure.reg)
install.packages("QuantPsyc")
library(QuantPsyc)
lm.beta(bloodpressure.reg)
mean(bloodpressure$Age)
mean(bloodpressure$Size)
51-52.68
3.3-3.41796
install.packages("ppcor")
library(ppcor)
library(ppcor)
spcor(bloodpressue[,c("SBP","SALARY_c","TIME","CITS")])
spcor(bloodpressue[,c("SBP","Size_c","Age_c")])
spcor(bloodpressure[,c("SBP","Size_c","Age_c")])
0.2459132^2
0.2636291^2
spcor(bloodpressure[,c("SBP","Age_c")])
pcor(bloodpressure[,c("SBP","Age_c")])
pcor(bloodpressure[,c("SBP","Size_c","Age_c")])
0.3435182^2
tutoring = read.table("/Users/derekrouch/Downloads/tutoring_and_gpa.txt", header=T, sep="\t")
View(tutoring)
View(tutoring)
View(tutoring)
View(tutoring)
tutoring_gpa = read.table("/Users/derekrouch/Downloads/tutoring_and_gpa.txt", header=T, sep=",")
View(tutoring_gpa)
tutoring_gpa$age_c = tutoring_gpa$age - mean(tutoring_gpa$age)
tutoring_gpa.reg = lm(gpa ~ num_tut_hrs + age_c, data=tutoring_gpa)
summary(tutoring_gpa.reg)
mean(tutoring_gpa$age)
mean(bloodpressure$Age)
View(bloodpressure)
mean(bloodpressure$Size)
format <- c(17,54,64)
chisq.test(format, p=c(1/3,1/3,1/3))
graduate <- read.table(file.choose(), header=TRUE, sep="\t")
View(graduate)
gradtable <- table(graduate$Business,graduate$Doctorate)
gradtable
View(gradtable)
gradetable
gradtable
chisq.test(gradtable,correct=F)
sesstem <- read.table(file.choose(), header=TRUE, sep=",")
install.packages("Rcmdr")
library(tidyverse)
## Where are we?
sc%>%filter(instnm=="Vanderbilt University")
library(tidyverse)
## Where are we?
sc%>%filter(instnm=="Vanderbilt University")
## Load in the data
load("college.Rdata")
View(sc)
#library(gdata)  #gdata is finicky ... you may need to install it, but not load it.
library(tidyverse)
library(haven)
library(readxl)
hsb<-read_csv(file="/Users/derekrouch/Documents/GitHub/data-science/hsb.csv")
View(hsb)
https://stats.idre.ucla.edu/wp-content/uploads/2016/02/hsb2-2.csv
hsb<-read_csv(file="https:/stats.idre.ucla.edu/wp-content/uploads/2016/02/hsb2-2.csv")
hsb<-read_csv(file="https://stats.idre.ucla.edu/wp-content/uploads/2016/02/hsb2-2.csv")
hsb<-read_csv(file="https://stats.idre.ucla.edu/wp-content/uploads/2016/02/hsb2-2.csv")
hsb<-read_csv(file="/Users/derekrouch/Documents/GitHub/data-science/hsb.csv")
write_csv(hsb,path="hsb.csv")
hsb%>%mutate(ses=as.character(ses))->hsb
hsb%>%mutate(ses=as.numeric(ses))->hsb
#Check it out
head(hsb)
##Need these for later
my.names<-names(hsb)
#Write this in a variety of formats to be used later
write_delim(hsb, path="hsb.txt",delim="\t")
write_delim(hsb, path="hsb_semicolon.txt",delim=";")
gdata::write.fwf(data.frame(hsb),file="hsb.dat",sep="",colnames=FALSE)
install.packages(gdata)
install.packages("gdata")
library(gdata)
my.widths=c(3,#id
1, #female
1, #race
1, #ses
1, #schtyp
1, #prog
2, #read
2, #write
2, #math
2, #science
2 #socst
)
my_positions<-fwf_widths(my.widths)
View(my_positions)
my_positions<-fwf_widths(my.widths)
View(my_positions)
hsb3<-read_fwf("hsb.dat",
col_positions=my_positions)
head(hsb3)
names(hsb3)<-my.names
View(hsb3)
head(hsb3)
hsb_stata<-read_dta("https://stats.idre.ucla.edu/stat/stata/notes/hsb2.dta")
head(hsb_stata)
#SPSS
example_spss<-read_spss("https://stats.idre.ucla.edu/stat/data/binary.sav")
head(example_spss)
#SAS
hsb_sas<-read_sas("https://stats.idre.ucla.edu/wp-content/uploads/2016/02/hsb2.sas7bdat")
head(hsb_sas)
if(file.exists("free.xls")==FALSE){
download.file("http://nces.ed.gov/programs/digest/d14/tables/xls/tabn204.10.xls",destfile="free.xls")
free<-read_excel("free.xls",skip=4,col_names=FALSE)
}else{
free<-read_excel("free.xls",skip=4,col_names=FALSE)
}
if(file.exists("free.xls")==FALSE){
download.file("http://nces.ed.gov/programs/digest/d14/tables/xls/tabn204.10.xls",destfile="free.xls")
free<-read_excel("free.xls",skip=4,col_names=FALSE)
}else{
free<-read_excel("free.xls",skip=4,col_names=FALSE)
}
free<-read_excel("free.xls",skip=4,col_names=FALSE)
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
library(readxl)
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
free<-read_xls("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
if(file.exists("/Users/derekrouch/Documents/GitHub/data-science/free.xls")==FALSE){
download.file("http://nces.ed.gov/programs/digest/d14/tables/xls/tabn204.10.xls",destfile="free.xls")
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
}else{
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
}
read.xls("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4, col_names=FALSE)
#library(gdata)  #gdata is finicky ... you may need to install it, but not load it.
library(tidyverse)
library(haven)
library(readxl)
## Web page:
##http://nces.ed.gov/programs/digest/d14/tables/dt14_204.10.asp
if(file.exists("/Users/derekrouch/Documents/GitHub/data-science/free.xls")==FALSE){
download.file("http://nces.ed.gov/programs/digest/d14/tables/xls/tabn204.10.xls",destfile="free.xls")
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
}else{
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
}
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
read.xls("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4, col_names=FALSE)
read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls")
install.packages("readxl")
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
#library(gdata)  #gdata is finicky ... you may need to install it, but not load it.
library(tidyverse)
#library(gdata)  #gdata is finicky ... you may need to install it, but not load it.
library(tidyverse)
library(haven)
library(readxl)
free<-read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4,col_names=FALSE)
read.xls("/Users/derekrouch/Documents/GitHub/data-science/free.xls",skip=4, col_names=FALSE)
read_excel("/Users/derekrouch/Documents/GitHub/data-science/free.xls")
read_excel("/Users/derekrouch/Documents/GitHub/LLO8200/free.xls")
read.xls("/Users/derekrouch/Documents/GitHub/LLO8200/free.xls",skip=4, col_names=FALSE)
read_excel("/Users/derekrouch/Documents/GitHub/LLO8200/free.xls")
free<-read_excel("/Users/derekrouch/Documents/GitHub/LLO8200/free.xls",skip=4,col_names=FALSE)
free<-read_excel("/Users/derekrouch/Downloads/tabn204.10.xls",skip=4,col_names=FALSE)
View(free)
head(free)
free2<-free[ ,-(c(3,6,9,12,15,18))]
#Get rid of unwanted rows
free2<-free2%>%filter(is.na(X__1)==FALSE)
View(hsb)
head(free2)
View(free2)
#Get rid of unwanted rows
free2<-free2%>%filter(is.na(...1)==FALSE)
##50 states plus dc only
free2<-free2[2:52,]
head(free2)
tail(free2)
names(free2)<-c("state",
"total_2000",
"total_2010",
"total_2011",
"total_2012",
"frl_2000",
"frl_2010",
"frl_2011",
"frl_2012",
"pc_frl_2000",
"pc_frl_2010",
"pc_frl_2011",
"pc_frl_2012")
free_total<-free2%>%select(state,
total_2000,
total_2010,
total_2011,
total_2012)
names(free_total)<-c("state","2000","2010","2011","2012")
free_total<-free_total%>%
gather(`2000`,`2010`,`2011`,`2012`,key=year,value=total_students)
frl_total<-free2%>%select(state,
frl_2000,
frl_2010,
frl_2011,
frl_2012)
names(frl_total)<-c("state","2000","2010","2011","2012")
frl_total<-frl_total%>%gather(`2000`,`2010`,`2011`,`2012`,key=year,value=frl_students)
free_tidy<-left_join(free_total,frl_total,by=c("state","year"))
free_tidy
## Total by year
free_tidy%>%group_by(year)%>%summarize(total_students=sum(total_students),
total_frl_student=sum(frl_students))%>%
mutate(pct_frl=total_frl_student/total_students)
View(hsb_sas)
View(hsb_sas)
View(hsb_sas)
View(hsb)
## Get libraries
library(tidyverse)
## Get libraries
library(tidyverse)
library(haven)
library(readxl)
library(haven)
library(readxl)
## Set working director
setwd("~/Documents/GitHub/data-science")
oecd <- read_table("https://stats.idre.ucla.edu/stat/stata/notes/hsb2.dta")
View(oecd)
knitr::opts_chunk$set(echo = TRUE)
oecd <- read_fwf("https://stats.idre.ucla.edu/stat/stata/notes/hsb2.dta")
oecd <- read.delim("https://stats.idre.ucla.edu/stat/stata/notes/hsb2.dta", header = TRUE, sep="\t")
oecd <- read.delim("https://www.wiley.com/legacy/wileychi/baltagi/supp/Gasoline.dat", header = TRUE, sep="\t")
View(oecd)
oecd <- read.delim("https://www.wiley.com/legacy/wileychi/baltagi/supp/Gasoline.dat", header = TRUE, sep="")
View(oecd)
## Save as RData file
save(oecd, file = "oecd.RData")
maindata <- read_csv(file="/Users/derekrouch/Documents/GitHub/data-science/ProblemSets_Completed/mainData.csv")
View(maindata)
View(oecd)
View(oecd)
View(oecd)
names(oecd) <- c("country",
"year",
"log_of_gas_consumption_per_car",
"log_of_real_per_capita_income",
"log_of_real_gas_price",
"log_of_car_stock_per_capitaa")
View(oecd)
View(oecd)
View(maindata)
## Rename the columns
names(oecd) <- c("country",
"year",
"log_of_gas_consumption_per_car",
"log_of_real_per_capita_income",
"log_of_real_gas_price",
"log_of_car_stock_per_capita")
maindata <- maindata[ ,-(c(10,11))]
View(maindata)
nes <- read_spss("http://www.uta.edu/faculty/story/DataSets/NES2004.sav")
View(nes)
nes <- nes[4:242,]
View(nes)
## Read in the data
nes <- read_spss("http://www.uta.edu/faculty/story/DataSets/NES2004.sav")
nes <- nes[,4:242]
View(nes)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
setwd("~/Documents/GitHub/data-science")
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
View(gss)
gss <- gsub(".", "", gss)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- gsub(".", ", gss)
gss <- gsub(".", "", gss)
gss <- gsub(".", "na", gss)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- sub(".", "na", gss)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
View(gss)
gss <- sub(".", "na", gss[,2:44])
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
View(gss)
gss <- sub(".", "na", gss[1:995,2:44])
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- gsub(".", "na", gss[1:995,2:44])
gss <- gsub('.', 'na', gss[1:995,2:44])
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
View(gss)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls", na.strings='.', skip=0,col_names=TRUE)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls", na.strings=='.', skip=0,col_names=TRUE)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls", na.strings=".", skip=0,col_names=TRUE)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls", na.strings=".", col_names=TRUE)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- replace(".", gss, "")
View(gss)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- ifelse(gss$hrs1==".","",gss$hrs1)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
View(gss)
is.na(gss)
is.null(gss)
is.null(gss)
is.na(gss)
gss <- gsub("\\.", "", gss))
View(gss)
gss <- gsub("\\.", "", gss)
gss
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- gsub("\\.", "", gss$hrs1)
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- gsub("\\.", "", gss[1:995,2:44])
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
gss <- gsub("\.", "", gss[1:995,2:44])
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
## Read in the data
gss <- read_excel("GeneralSocialSurvey1996ExcelDataStudentVersion.xls",skip=0,col_names=TRUE)
## Save as RData file
save(gss, file = "gss.RData")
## Read in the data
oecd <- read_delim("https://www.wiley.com/legacy/wileychi/baltagi/supp/Gasoline.dat", header = TRUE, sep="")
## Read in the data
oecd <- read.delim("https://www.wiley.com/legacy/wileychi/baltagi/supp/Gasoline.dat", header = TRUE, sep="")
psid <- read.delim("http://users.nber.org/~rdehejia/data/psid_controls.txt", header = TRUE, sep="")
View(psid)
names <- c(treatment_indicator, age, education, black, hispanic, married, nodegree, earnings_1974, earnings_1975, earnings_1978)
names <- c("treatment_indicator", "age", "education", "black", "hispanic", "married", "nodegree", "earnings_1974", "earnings_1975", "earnings_1978")
## Read in the data
psid <- read.delim("http://users.nber.org/~rdehejia/data/psid_controls.txt", header = names, sep="")
## Read in the data
psid <- read.delim("http://users.nber.org/~rdehejia/data/psid_controls.txt", header = FALSE, sep="")
## Read in the data
psid <- read.delim("http://users.nber.org/~rdehejia/data/psid_controls.txt", header = FALSE, sep="")
col_names <- c("treatment_indicator", "age", "education", "black", "hispanic", "married", "nodegree", "earnings_1974", "earnings_1975", "earnings_1978")
psid <- names(col_names)
`colnames<-`(names)
colnames<-(names)
## Read in the data
psid <- read.delim("http://users.nber.org/~rdehejia/data/psid_controls.txt", header = FALSE, sep="")
## Read in the data
psid <- read.delim("http://users.nber.org/~rdehejia/data/psid_controls.txt", header = FALSE, sep="")
names(psid)<-c("treatment_indicator",
"age",
"education",
"black",
"hispanic",
"married",
"nodegree",
"earnings_1974",
"earnings_1975",
"earnings_1978")
View(psid)
View(nes)
View(psid)
knitr::opts_chunk$set(echo = TRUE)
## Get libraries
library(tidyverse)
library(haven)
library(readxl)
## Set working director
setwd("~/Documents/GitHub/data-science")
